<<<<<<< HEAD
getwd()
setwd("./GitHub/RProg/")
data <- data.frame()
data <- read.csv("specdata/010.csv")
str(data)
require("stringr")
install.packages("stringr")
install.packages("stringr")
require("stringr")
source("pollutantmean.R")
data
data[["nitrate"]]
mean(data[["nitrate"]], na.rm = TRUE)
data <- read.csv("specdata/023.csv")
mean(data[["nitrate"]], na.rm = TRUE)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
str_pad(1, width = 3, side = "left", pad = "")
str_pad()
str_pad("1", width = 3, side = "left", pad = "")
??str_pad
str_pad("1", width = 3, side = "left", pad = " ")
str_pad(1, width = 3, side = "left", pad = "0")
pollutantmean("specdata", "nitrate", 23)
str_pad(i, width = 3, side = "left", pad = "0")
str_pad(1, width = 3, side = "left", pad = "0")
paste(str_pad(1, width = 3, side = "left", pad = "0"), "csv", sep = ".")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:332)
pollutantmean("specdata", "nitrate", 70:72)
str(data)
nrow(data)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
??rbind
source("complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 3)
complete("specdata", 3)
data <- read.csv("specdata/003.csv")
nrow(data)
str(data)
2191/4
?cor
??cor
?cor
?var
cor(1:10, 2:11)
View(data)
str(data)
data[1]
data[2]
data[3]
data$sulfate[3]
data$sulfate[1]
data$sulfate[100]
data$sulfate[1951]
=======
help
sd(c(5,8,12))
which.min(c(4,1,6))
getwd()
WHO = read.csv("R\WHO.csv")
WHO = read.csv("R\\WHO.csv")
str(WHO)
WHO$Country
WHO$FertilityRate
WHO$Region
str(WHO)
summary(WHO)
WHO_Europe = subset(WHo, Region == "Europe")
WHO_Europe = subset(WHO, Region == "Europe")
WHO_Europe
WHO$Region
subset(WHO, Region == "Americas")
subset(WHO, Country == "Brazil")
LifeExpectancy
subset(WHO, LifeExpectancy > 80)
subset(WHO, LifeExpectancy > 80 && Region == "Europe")
subset(WHO, LifeExpectancy > 80 && Region == "Americas")
?subset
WHO_Europe
str(WHO_Europe)
summary(WHO_Europe)
write.csv(WHO_Europe, "R\WHO_Europe.csv")
write.csv(WHO_Europe, "R\WHO_Europe.csv")
write.csv(WHO_Europe, "R\\WHO_Europe.csv")
ls()
rm(WHO_Europe)
ls()
summary(WHO_Europe)
summary(WHO)
str(WHO)
WHO$Under15
mean(WHO$Under15)
sd(WHO$Under15)
teste = c(2, 100,120,130,140,150, 1200)
teste
mean(teste)
100+120+130+140+150+1200
1840/6
100+120+130+140+150
640/5
100+120+130+140+150+1200+2/7
(100+120+130+140+150+1200+2)/7
teste
sum(teste)
sum(teste)/7
mean(teste)
sd(teste)
1200/7
1200/6
1200/5
ls()
rm(teste)
ls()
sd(WHO$Under15)
WHO$Under15
WHO
summary(WHO)
summary(WHO$Under15)
WHO$Under15
which.min(WHO$Under15)
WHO$Country[which.min(WHO$Under15)]
WHO$Country[86]
which.max(WHO$Under15)
WHO$Country[124]
plot(WHO$GNI, WHO$FertilityRate)
which.max(WHO$GNI)
WHO$Country[138]
which.min(WHO$GNI)
WHO$Country[48]
Outliers = subset(WHO, GNI > 10000 & FertilityRate > 2.5)
Outliers
nrow(Outliers)
Outliers
Outliers[c("Country","GNI","FertilityRate")]
summaty(WHO)
summary(WHO)
which.min(WHO$Over60)
WHO$Country[183]
WHO$Over60[183]
which.max(WHO$LiteracyRate)
WHO$Country[44]
hist(WHO$CellularSubscribers)
plot(WHO$CellularSubscribers)
hist(WHO$CellularSubscribers)
boxplot(WHO$LifeExpectancy - WHO$Region)
boxplot(WHO$LifeExpectancy - WHO$Region)
boxplot(WHO$LifeExpectancy - WHO$Region)
boxplot
boxplot(WHO$LifeExpectancy - WHO$Region)
subset(WHO, Region == "Africa")
which.max(WHO$LifeExpectancy)
AfricaLifeExpectancy = subset(WHO, Region == "Africa")
which.max(AfricaLifeExpectancy$LifeExpectancy)
AmericaLifeExpectancy = subset(WHO, Region == "Americas")
which.max(AmericaLifeExpectancy$LifeExpectancy)
which.min(AmericaLifeExpectancy$LifeExpectancy)
table(WHO$Region)
WHO
summary(WHO)
table(WHO$Region)
tapply(WHO$Over60, WHO$Region, mean)
tapply(WHO$Region, WHO$Over60, mean)
summary(WHO)
tapply(WHO$Region, WHO$Over60, mean, na.rm=TRUE)
tapply(WHO$LiteracyRate, WHO$Region, mean)
tapply(WHO$LiteracyRate, WHO$Region, mean, na.rm=TRUE)
tapply(WHO$LiteracyRate, WHO$Region, min, na.rm=TRUE)
tapply(WHO$ChildMortality, WHO$Region, min, na.rm=TRUE)
tapply(WHO$ChildMortality, WHO$Region, mean, na.rm=TRUE)
getwd()
ls()
mvt = read.csv("R\mvtWeek1.csv")
mvt = read.csv("R\\mvtWeek1.csv")
summary(mvt)
table(mvt$LocationDescription)
sort(table(mvt$LocationDescription))
sort(table(mvt$LocationDescription, start=1000))
sort(table(mvt$LocationDescription, start=10))
sort(table(mvt$LocationDescription, start=1))
sort(table(mvt$LocationDescription))
sort(table(mvt$LocationDescription, length=4))
sort(table(mvt$LocationDescription))
?table
locations = sort(table(mvt$LocationDescription))
locations
names(locations)
locations$names = sort(table(mvt$LocationDescription))
mvt$locations = sort(table(mvt$LocationDescription))
sort(table(mvt$LocationDescription))
subset(table(mvt$LocationDescription))
sort(table(mvt$LocationDescription))
sort(table(mvt$LocationDescription))
length(table(mvt$LocationDescription))
table(mvt$LocationDescription)[78]
sort(table(mvt$LocationDescription))[78]
sort(table(mvt$LocationDescription))[72:78]
sort(table(mvt$LocationDescription))[73:78]
sort(table(mvt$LocationDescription))[74:78]
sort(table(mvt$LocationDescription))[73:78]
sort(table(mvt$LocationDescription))[73:78]
subset(sort(table(mvt$LocationDescription))[73:78])
sort(table(mvt$LocationDescription))[73:78]
names(sort(table(mvt$LocationDescription))[73:78])
Top5 = subset(mvt, LocationDescription=="STREET" | LocationDescription=="PARKING LOT/GARAGE(NON.RESID.)" | LocationDescription=="ALLEY" | LocationDescription=="GAS STATION" | LocationDescription=="DRIVEWAY - RESIDENTIAL")
Top5
summary(mvt)
sum(mvt$LocationDescription)
str(Top5)
names(sort(table(mvt$LocationDescription)))
sort(table(mvt$LocationDescription))[73:78]
names(sort(table(mvt$LocationDescription))[73:78])
Top5 = subset(mvt, LocationDescription %in% names(sort(table(mvt$LocationDescription))[73:78]))
Top5
Top5 = subset(mvt, LocationDescription %in% names(sort(table(mvt$LocationDescription))[73:78]) & LocalDescription != 'OTHER')
Top5 = subset(mvt, LocationDescription %in% names(sort(table(mvt$LocationDescription))[73:78]) & LocalDescription != 'OTHER')
Top5 = subset(mvt, LocationDescription %in% names(sort(table(mvt$LocationDescription))[73:78]) & LocationDescription != 'OTHER')
summary(Top5)
str(Top5)
names(sort(table(mvt$LocationDescription)))
sort(table(mvt$LocationDescription))
length(sort(table(mvt$LocationDescription)))
(sort(table(mvt$LocationDescription))[73:78]
sort(table(mvt$LocationDescription))[73:78]
subset(mvt, LocationDescription, sort(table(mvt$LocationDescription))[73:78])
subset(mvt, LocationDescription == names(sort(table(mvt$LocationDescription))[73:78]))
subset(mvt, LocationDescription %in% names(sort(table(mvt$LocationDescription))[73:78]))
top = subset(mvt, LocationDescription %in% names(sort(table(mvt$LocationDescription))[73:78]))
summary(top)
str(top)
str(subset(top, LocationDescription != 'OTHER'))
ls()
rm(locations)
ls)
ls()
rm(top, Top5)
ls()
table(mvt$LocationDescription)
sort(table(mvt$LocationDescription))
sort(table(mvt$LocationDescription))[73:78]
sort(table(mvt$LocationDescription))[73:75,77,78]
sort(table(mvt$LocationDescription))[c(73:75,77,78)]
sort(table(mvt$LocationDescription))[c(73:75,77,78)]
tbLocation = sort(table(mvt$LocationDescription))[c(73:75,77,78)]
top5 = subset(mvt, LocationDescription %in% names(tbLocation))
summary(top5)
str(top5)
ls()
tbLocation
table(tbLocation)
table(top5$LocationDescription)
factor(top5$LocationDescription)
summary(top5)
str(top5)
top5$LocationDescription = factor(top5$LocationDescription)
summary(top5)
str(top5)
table(top5$LocationDescription, top5$Arrest)
prop.table(table(top5$LocationDescription, top5$Arrest), 2)
prop.table(table(top5$LocationDescription, top5$Arrest), 1)
table(top5$LocationDescription, top5$Arrest)
names(top5)
weekdays(top5$Date)
table(Top5$LocationDescription, Top5$Weekday)
table(top5$LocationDescription, top5$Weekday)
DateConvert = as.Date(strptime(top5$Date, "%m/%d/%y %H:%M"))
DateConvert
top5$WeekDay = weekdays(DateConvert)
table(top5$LocationDescription, top5$WeekDay)
which.max(table(top5$LocationDescription, top5$WeekDay))
a=1000
b=0.0001
c=matrix(0,a,a)
for ( i in 1:a){c[i,i] = 1-1.75*b}
for ( i in 1:a){c[i-1,i] = b}
for ( i in 2:a){c[i,i-1] = 0.75*b}
c[1,1]=1-b
c[a,a]=1
c[a,a-1]=0
system.time(e=c%^%100)
require("expm")
options(digits=22)
c=matrix(0,a,a)
for ( i in 1:a){c[i,i] = 1-1.75*b}
for ( i in 1:a){c[i-1,i] = b}
for ( i in 2:a){c[i,i-1] = 0.75*b}
c[1,1]=1-b
c[a,a]=1
c[a,a-1]=0
system.time(e=c%^%100)
x = as.Date("1970-01-01")
x
class(x)
unclass(x)
unclass(as.Date("1970-01-02"))
Sys.time
x <- Sys.time
x
x <- Sys.time()
x
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1:10
x
if(x > 5){ x<- 0 }
x
(x>5)
x<-0
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f
vf
f
z <- 10
f(3)
f(3)
f(3)
x
rm(x)
f(3)
f
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
ls()
rm
v = c(ls())
v
rm(v)
ls()
rm(c(ls()))
rm(ls())
ls()
getwd()
getwd()
dir = getwd()
dit
dir
dir += ""
dir = dir + "/RProg/specdata"
dir <- getwd() + "/RProg/specdata"
dir
?Concat
??Concat
paste(1:12)
a = paste(1:12)
a
a = paste("1 ","seeee")
a
dir <- paste(getwd(),"/RProg/specdata")
dir
dir <- paste(getwd(),"/RProg/specdata", sep="")
dir
setwd(paste(getwd(),"/RProg/specdata", sep=""))
getwd()
dir
dir()
str_pad
require(stringr)
str_pad(string = "1.csv", side = "left", pad = "0", width = 7)
id = 1
nameFile <- paste(id, ".csv" sep = "")
nameFile <- paste(id, ".csv", sep = "")
nameFile
nameFile <- str_pad(string = nameFile, side = "left", pad = "0", width = 7)
nameFile
nameFile
data <- read.csv(nameFile)
data
str(data)
id = 10:32
for(i in id)
for(i in id){ print i }
for(i in id){ print(i) }
data <- read.csv("001.csv")
summary(data)
summary(data)
??sapply
tapply(data, "nitrate" na.rm = TRUE)
tapply(data, "nitrate", mean,  na.rm = TRUE)
sapply(data, mean, na.rm = TRUE)
sapply(data$sulfate, mean, na.rm = TRUE)
lapply(data$sulfate, mean, na.rm = TRUE)
tapply(data$sulfate, mean, na.rm = TRUE)
tapply(sulfate, mean, na.rm = TRUE)
lapply(data$sulfate, mean, na.rm = TRUE)
lapply(data, mean, na.rm = TRUE)
sapply(data, mean, na.rm = TRUE)
sapply(data, mean, na.rm = TRUE)
data[["sulfate"]]
sapply(data[["sulfate"]], mean, na.rm = TRUE)
lapply(data[["sulfate"]], mean, na.rm = TRUE)
tapply(data[["sulfate"]], mean, na.rm = TRUE)
apply(data[["sulfate"]], mean, na.rm = TRUE)
apply(data, mean, na.rm = TRUE)
tapply(data[["sulfate"]], mean, na.rm = TRUE)
tapply(data["sulfate"], mean, na.rm = TRUE)
mean(data[["sulfate"]], na.rm = TRUE)
mean(data[["sulfate"]], na.rm = TRUE)
meanTotal
meanTotal <- 0
tempSum <- mean(data[["sulfate"]], na.rm = TRUE)
tempSum
meanTotal <- meanTotal + tempSum
meanTotal
meanTotal <- meanTotal + tempSum
meanTotal
getwd()
setwd("C:/Users/charles/Documents")
?cor
getwd()
setwd("GitHub/RProg/")
data <- read.csv("specdata/300.csv")
str(data)
summary(data)
head(data)
cor(data$sulfate, data$nitrate, na.rm = TRUE)
cor(data$sulfate, data$nitrate)
cor(data, data$nitrate)
cor(data$sulfate, data)
cor(data$sulfate, data$nitrate)
?c
>>>>>>> origin/master
